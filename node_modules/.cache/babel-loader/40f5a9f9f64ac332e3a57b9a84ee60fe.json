{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\message\\\\src\\\\components\\\\writeMessage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { IconButton } from '@material-ui/core';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Form from 'react-bootstrap/Form';\nimport Button from '@material-ui/core/Button';\nimport { db } from '../FirebaseDb.js';\nimport firebase from \"firebase\";\nimport { useParams } from \"react-router-dom\";\nimport InputBase from '@material-ui/core/InputBase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WriteMessage = props => {\n  _s();\n\n  var user = firebase.auth().currentUser;\n  var name, email, photo, uid, emailVerified;\n  name = user.displayName;\n  email = user.email;\n  photo = user.photoURL;\n  emailVerified = user.emailVerified;\n  uid = user.uid;\n  const {\n    roomId\n  } = useParams();\n  const [input, setInput] = useState(\"\");\n  const [profile, setProfile] = useState([]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    db.collection('rooms').doc(roomId).collection(\"message\").add({\n      message: input,\n      name: name,\n      myPic: props.myPic,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    console.log(\"escribiste\", input);\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputBase, {\n          placeholder: \"Search Google Maps\",\n          inputProps: {\n            'aria-label': 'Write your message'\n          },\n          value: input,\n          onChange: e => setInput(e.target.value),\n          style: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: sendMessage,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 21\n  }, this);\n};\n\n_s(WriteMessage, \"Ebn3AVAZXz6Xipbg4BGFbnUkm38=\", false, function () {\n  return [useParams];\n});\n\n_c = WriteMessage;\nexport default WriteMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"WriteMessage\");","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/message/src/components/writeMessage.jsx"],"names":["React","Fragment","useState","useEffect","Avatar","IconButton","DonutLargeIcon","SearchIcon","AttachFileIcon","MoreVertIcon","Form","Button","db","firebase","useParams","InputBase","WriteMessage","props","user","auth","currentUser","name","email","photo","uid","emailVerified","displayName","photoURL","roomId","input","setInput","profile","setProfile","sendMessage","e","preventDefault","collection","doc","add","message","myPic","timestamp","firestore","FieldValue","serverTimestamp","console","log","display","flexDirection","alignItems","justifyContent","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from '@material-ui/core/Button';\r\nimport {db} from '../FirebaseDb.js';\r\nimport firebase from \"firebase\";\r\n\r\nimport {useParams} from \"react-router-dom\"\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\n\r\n\r\nconst WriteMessage = (props) =>{\r\n\r\n\r\n    var user = firebase.auth().currentUser;\r\n    var name, email, photo, uid, emailVerified;\r\n\r\n    name = user.displayName;\r\n    email = user.email;\r\n    photo = user.photoURL;\r\n    emailVerified = user.emailVerified;\r\n    uid = user.uid;\r\n\r\n\r\n\r\nconst {roomId} =useParams();\r\n\r\n\r\n\r\n            const [input, setInput]=useState(\"\");\r\n\r\n            const [profile, setProfile] = useState ([]);\r\n\r\n\r\n\r\n        const sendMessage = (e) => {\r\n             e.preventDefault();\r\n              \r\n\r\n             db.collection('rooms').doc(roomId).collection(\"message\").add({\r\n                message:input,\r\n                name:name, \r\n                myPic:props.myPic,\r\n                timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n\r\n             });\r\n             console.log(\"escribiste\", input);\r\n             setInput(\"\");\r\n             };\r\n\r\n\r\n                  \r\n\r\n\r\n\r\n                    return(\r\n\r\n                    <Fragment>\r\n\r\n\r\n                        <Form >\r\n\r\n                            <div style={{display:'flex', flexDirection:'row', alignItems:'center', justifyContent:'space-between'}} >\r\n\r\n                            <InputBase\r\n                                placeholder=\"Search Google Maps\"\r\n                                inputProps={{ 'aria-label': 'Write your message' }}\r\n                                value={input} onChange={e=>setInput(e.target.value)} style={{}} \r\n                                />\r\n                                \r\n\r\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={sendMessage} >\r\n                                    Enviar\r\n                                </Button>\r\n\r\n                            </div>\r\n\r\n                        \r\n                            \r\n                        </Form>    \r\n                            \r\n\r\n                        \r\n                    </Fragment>\r\n                    \r\n\r\n                    );\r\n                    }\r\n\r\nexport default WriteMessage;"]},"metadata":{},"sourceType":"module"}