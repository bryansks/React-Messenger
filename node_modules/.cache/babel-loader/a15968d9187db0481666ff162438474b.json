{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\message\\\\src\\\\components\\\\sidebarConversations.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { db } from '../FireData.js';\nimport Button from '@material-ui/core/Button';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { Modal } from 'semantic-ui-react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SidebarConversations = ({\n  id,\n  name,\n  integrantes,\n  addNewChat,\n  integrantesPase,\n  admin\n}) => {\n  _s();\n\n  var user = firebase.auth().currentUser;\n  var nam, email, photo, uid, emailVerified;\n  nam = user.displayName;\n  email = user.email;\n  photo = user.photoURL;\n  emailVerified = user.emailVerified;\n  uid = user.uid;\n  const [profile, setProfile] = useState([]);\n  const [yo, setYo] = useState(\"\");\n  React.useEffect(() => {\n    db.collection(`perfil${email}`).get().then(data => {\n      setProfile(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n      return profile;\n    });\n  }, []);\n  const [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    const unsubscribe = db.collection('rooms').onSnapshot(snapshot => setRooms(snapshot.docs.map(doc => doc.data().integrantes)));\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  if (integrantesPase.includes(email)) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        style: {\n          borderRadius: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar_Conversations\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(AvatarGroup, {\n              max: 4,\n              children: integrantes.map(integrantes => /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"Remy Sharp\",\n                src: integrantes.userPic,\n                style: {\n                  boxShadow: '2px 2px 2px rgb(100, 100, 100)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              marginTop: '9px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sidebar_conversation_inf\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  color: 'white',\n                  fontFamily: 'Roboto, sans-serif',\n                  fontSize: '15px'\n                },\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }, this);\n  } else if (admin.includes(email)) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        style: {\n          borderRadius: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar_Conversations\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(AvatarGroup, {\n              max: 4,\n              children: integrantes.map(integrantes => /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"Remy Sharp\",\n                src: integrantes.userPic,\n                style: {\n                  boxShadow: '2px 2px 2px rgb(100, 100, 100)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              marginTop: '9px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sidebar_conversation_inf\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  color: 'white',\n                  fontFamily: 'Roboto, sans-serif',\n                  fontSize: '15px'\n                },\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }, this);\n  }\n};\n\n_s(SidebarConversations, \"3gK5YiqnHkkxApUdJ4CoiObLo/E=\");\n\n_c = SidebarConversations;\nexport default SidebarConversations;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarConversations\");","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/message/src/components/sidebarConversations.jsx"],"names":["React","Fragment","useState","useEffect","Avatar","db","Button","ChatBubbleOutlineIcon","List","ListItem","Modal","BrowserRouter","Router","Switch","Route","Link","firebase","AvatarGroup","IconButton","DeleteIcon","ExitToAppIcon","SidebarConversations","id","name","integrantes","addNewChat","integrantesPase","admin","user","auth","currentUser","nam","email","photo","uid","emailVerified","displayName","photoURL","profile","setProfile","yo","setYo","collection","get","then","data","docs","map","doc","rooms","setRooms","unsubscribe","onSnapshot","snapshot","includes","borderRadius","userPic","boxShadow","display","flexDirection","alignItems","justifyContent","marginTop","color","fontFamily","fontSize"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {db} from '../FireData.js';\r\nimport Button from '@material-ui/core/Button';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\n\r\n\r\nimport { Modal } from 'semantic-ui-react'\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n  import firebase from \"firebase\";\r\n  import AvatarGroup from '@material-ui/lab/AvatarGroup';\r\n  import IconButton from '@material-ui/core/IconButton';\r\n  import DeleteIcon from '@material-ui/icons/Delete';\r\n  import ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n \r\n\r\n\r\n\r\n\r\nconst SidebarConversations = ({id,name, integrantes,addNewChat, integrantesPase, admin}) =>{\r\n\r\n           var user = firebase.auth().currentUser;\r\n           var nam, email, photo, uid, emailVerified;\r\n\r\n           nam = user.displayName;\r\n           email = user.email;\r\n           photo = user.photoURL;\r\n           emailVerified = user.emailVerified;\r\n           uid = user.uid;\r\n\r\n\r\n    const [profile, setProfile] = useState ([])\r\n    const [yo , setYo]= useState(\"\")\r\n        \r\n              React.useEffect(() => {\r\n                db.collection(`perfil${email}`).get()\r\n                .then(data => {\r\n                  \r\n                    setProfile(data.docs.map(doc => {return {...doc.data(), id: doc.id} }))\r\n                    return profile})\r\n                     \r\n            }, [] );\r\n\r\n\r\n\r\n            const [rooms, setRooms]=useState([]);\r\n            \r\n\r\n                    useEffect(() =>{\r\n\r\n                            const unsubscribe = db.collection('rooms').onSnapshot(snapshot =>(\r\n\r\n                            setRooms(snapshot.docs.map(doc =>\r\n                            (\r\n\r\n                            \r\n                            doc.data().integrantes\r\n\r\n                            ))\r\n                            )\r\n                            ));\r\n\r\n                                return () =>{\r\n                                    unsubscribe();\r\n                                    \r\n                                    \r\n                                }\r\n\r\n                   }, [])\r\n\r\n                   \r\n                    \r\n    \r\n\r\n           \r\n\r\n           \r\n\r\n            if(integrantesPase.includes(email)){\r\n               \r\n\r\n                return  (\r\n\r\n        \r\n\r\n                    <Fragment>\r\n\r\n                    <ListItem button style={{borderRadius:'20px'}} >\r\n                        <div className=\"sidebar_Conversations\" > \r\n\r\n                                    <div>\r\n\r\n                                        <AvatarGroup max={4}>\r\n\r\n                                            {integrantes.map(integrantes=>(\r\n                                            <Avatar alt=\"Remy Sharp\" src={integrantes.userPic} style={{boxShadow:'2px 2px 2px rgb(100, 100, 100)'}} />\r\n                                            ))}\r\n                                            \r\n                                        </AvatarGroup>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                        \r\n                                  <div style={{display:'flex', flexDirection:'row', alignItems:'center', justifyContent:'space-between', marginTop:'9px'}}>\r\n                                       \r\n\r\n                                        <div className=\"sidebar_conversation_inf\">\r\n                            \r\n                                            <h5 style={{color:'white', fontFamily:'Roboto, sans-serif', fontSize:'15px'}}>{name}</h5>\r\n                            \r\n                                        </div>\r\n\r\n                                       \r\n\r\n                                 </div>\r\n\r\n\r\n            \r\n                        </div>\r\n               \r\n                        </ListItem>\r\n                    </Fragment>\r\n                    \r\n            \r\n                )\r\n            } else if (admin.includes(email)) {\r\n\r\n                return  (\r\n\r\n        \r\n\r\n                    <Fragment>\r\n\r\n                     <ListItem button style={{borderRadius:'20px'}} >\r\n                        <div className=\"sidebar_Conversations\" > \r\n\r\n                                    <div>\r\n\r\n                                        <AvatarGroup max={4}>\r\n\r\n                                            {integrantes.map(integrantes=>(\r\n                                            <Avatar alt=\"Remy Sharp\" src={integrantes.userPic} style={{boxShadow:'2px 2px 2px rgb(100, 100, 100)'}} />\r\n                                            ))}\r\n                                            \r\n                                        </AvatarGroup>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                        \r\n                                  <div style={{display:'flex', flexDirection:'row', alignItems:'center', justifyContent:'space-between', marginTop:'9px'}}>\r\n                                       \r\n\r\n                                        <div className=\"sidebar_conversation_inf\">\r\n                            \r\n                                            <h5  style={{color:'white', fontFamily:'Roboto, sans-serif', fontSize:'15px'}}>{name}</h5>\r\n                            \r\n                                        </div>\r\n\r\n                                       \r\n\r\n                                 </div>\r\n\r\n\r\n            \r\n                        </div>\r\n               \r\n                        </ListItem>\r\n                    </Fragment>\r\n                    \r\n            \r\n                )\r\n            } else {\r\n\r\n                return(\r\n                    <Fragment>\r\n\r\n                    </Fragment>\r\n                )\r\n            }\r\n        \r\n    \r\n};\r\n\r\nexport default SidebarConversations;"]},"metadata":{},"sourceType":"module"}