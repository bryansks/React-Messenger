{"ast":null,"code":"var e = require(\"react\"),\n    n = {\n  display: \"block\",\n  opacity: 0,\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  height: \"100%\",\n  width: \"100%\",\n  overflow: \"hidden\",\n  pointerEvents: \"none\",\n  zIndex: -1\n},\n    t = function (t) {\n  var r = t.onResize,\n      u = e.useRef();\n  return function (n, t) {\n    var r = function () {\n      return n.current && n.current.contentDocument && n.current.contentDocument.defaultView;\n    };\n\n    function u() {\n      t();\n      var e = r();\n      e && e.addEventListener(\"resize\", t);\n    }\n\n    e.useEffect(function () {\n      return r() ? u() : n.current && n.current.addEventListener && n.current.addEventListener(\"load\", u), function () {\n        var e = r();\n        e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"resize\", t);\n      };\n    }, []);\n  }(u, function () {\n    return r(u);\n  }), e.createElement(\"iframe\", {\n    style: n,\n    src: \"about:blank\",\n    ref: u,\n    \"aria-hidden\": !0,\n    tabIndex: -1,\n    frameBorder: 0\n  });\n},\n    r = function (e) {\n  return {\n    width: null != e ? e.offsetWidth : null,\n    height: null != e ? e.offsetHeight : null\n  };\n};\n\nmodule.exports = function (n) {\n  void 0 === n && (n = r);\n  var u = e.useState(n(null)),\n      o = u[0],\n      i = u[1],\n      c = e.useCallback(function (e) {\n    return i(n(e.current));\n  }, [n]);\n  return [e.useMemo(function () {\n    return e.createElement(t, {\n      onResize: c\n    });\n  }, [c]), o];\n};","map":{"version":3,"sources":["../src/ResizeListener.js","../src/useOnResize.js","../src/useResizeAware.js"],"names":["style","display","opacity","position","top","left","height","width","overflow","pointerEvents","zIndex","onResize","ref","React","useOnResize","src","aria-hidden","tabIndex","frameBorder","getTarget","current","contentDocument","defaultView","run","target","addEventListener","removeEventListener","defaultReporter","offsetWidth","offsetHeight","reporter","sizes","setSizes","ResizeListener"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport useOnResize from './useOnResize';\n\nconst style = {\n  display: 'block',\n  opacity: 0,\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  height: '100%',\n  width: '100%',\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  zIndex: -1,\n};\n\n// This automatically attaches to itself the resize event listener\n// and adds onResize as callback\nexport default ({\n  onResize,\n}: {\n  onResize: (React.ElementRef<any>) => void,\n}) => {\n  const ref = React.useRef();\n  useOnResize(ref, () => onResize(ref));\n\n  return (\n    <iframe\n      style={style}\n      src=\"about:blank\"\n      ref={ref}\n      aria-hidden={true}\n      tabIndex={-1}\n      frameBorder={0}\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\n\n// This is just an utility to cleanly attach a `resize` event listener\n// to a target HTMLObjectElement or HTMLIFrameElement\n// The real Hook is `useResizeAware.js`\nexport default (ref: React.ElementRef<any>, onResize: () => void) => {\n  const getTarget = () => ref.current && ref.current.contentDocument && ref.current.contentDocument.defaultView;\n  function run() {\n    // trigger onResize event on mount to provide initial sizes\n    onResize();\n    var target = getTarget();\n    target && target.addEventListener('resize', onResize);\n  }\n  React.useEffect(() => {\n    if (getTarget()) {\n      run();\n    }\n    else if (ref.current && ref.current.addEventListener) {\n      ref.current.addEventListener('load', run)\n    }\n\n    // clean event listener on unmount\n    return () => {\n      // Ensure the target exists and is in fact an event listener\n      // this fixes an issue where contentDocument.defaultView is not a real window object\n      // as can be the case when used with React portals\n      const target = getTarget();\n      const isListener =\n        target && typeof target.removeEventListener === 'function';\n\n      isListener && target.removeEventListener('resize', onResize);\n    };\n  }, []);\n};\n","// @flow\nimport * as React from 'react';\nimport ResizeListener from './ResizeListener';\n\nconst defaultReporter = (target: ?HTMLElement) => ({\n  width: target != null ? target.offsetWidth : null,\n  height: target != null ? target.offsetHeight : null,\n});\n\nexport default function useResizeAware(\n  reporter: typeof defaultReporter = defaultReporter\n) {\n  const [sizes, setSizes] = React.useState(reporter(null));\n  const onResize = React.useCallback(ref => setSizes(reporter(ref.current)), [\n    reporter,\n  ]);\n  const resizeListenerNode = React.useMemo(\n    () => <ResizeListener onResize={onResize} />,\n    [onResize]\n  );\n\n  return [resizeListenerNode, sizes];\n}\n"]},"metadata":{},"sourceType":"script"}